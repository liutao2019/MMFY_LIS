/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v8.2, Version=8.2.2.0, Culture=neutral, PublicKeyToken=a6519d31830a2c3c</AssemblyFullName>
///   <AssemblyLocation>C:\Program Files\hope\HopeLisClient\DevExpress.XtraReports.v8.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>zh-CHS</Localization>
///   <References>
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraReports.v8.2.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraPrinting.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.Data.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.Utils.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraTreeList.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraEditors.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraRichTextEdit.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraBars.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraPivotGrid.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraPivotGrid.v8.2.Core.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraNavBar.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.XtraCharts.v8.2.dll" />
///     <Reference Path="C:\Program Files\hope\HopeLisClient\DevExpress.Charts.v8.2.Core.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class xtraReport11 : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel xrLabel28;
        private DevExpress.XtraReports.UI.XRLabel xrLabel26;
        private DevExpress.XtraReports.UI.XRLabel xrLabel1;
        private DevExpress.XtraReports.UI.XRLabel xrLabel47;
        private DevExpress.XtraReports.UI.XRLabel xrLabel46;
        private DevExpress.XtraReports.UI.PageFooterBand PageFooter;
        private DevExpress.XtraReports.UI.XRLabel xrLabel32;
        private DevExpress.XtraReports.UI.XRLabel xrLabel31;
        private DevExpress.XtraReports.UI.XRLabel xrLabel29;
        private DevExpress.XtraReports.UI.XRLabel xrLabel4;
        private DevExpress.XtraReports.UI.XRLabel xrLabel24;
        private DevExpress.XtraReports.UI.XRLabel xrLabel17;
        private DevExpress.XtraReports.UI.XRLabel xrLabel16;
        private DevExpress.XtraReports.UI.XRLabel xrLabel15;
        private DevExpress.XtraReports.UI.XRLabel xrLabel21;
        private DevExpress.XtraReports.UI.XRLabel xrLabel22;
        private DevExpress.XtraReports.UI.XRLabel xrLabel23;
        private DevExpress.XtraReports.UI.XRLabel xrLabel25;
        private DevExpress.XtraReports.UI.XRLine xrLine3;
        private DevExpress.XtraReports.UI.XRLabel xrLabel27;
        private DevExpress.XtraReports.UI.GroupHeaderBand 病人分组头;
        private DevExpress.XtraReports.UI.GroupFooterBand 病人分组尾;
        private DevExpress.XtraReports.UI.XRLabel xrLabel59;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRPictureBox xrPictureBox1;
        private DevExpress.XtraReports.UI.XRBarCode xrBarCode1;
        private DevExpress.XtraReports.UI.XRLabel xrLabel13;
        private DevExpress.XtraReports.UI.XRLabel xrLabel14;
        private DevExpress.XtraReports.UI.XRLabel xrLabel11;
        private DevExpress.XtraReports.UI.XRLabel xrLabel10;
        private DevExpress.XtraReports.UI.XRLabel xrLabel6;
        private DevExpress.XtraReports.UI.XRLabel xrLabel9;
        private DevExpress.XtraReports.UI.XRLabel xrLabel8;
        private DevExpress.XtraReports.UI.XRLabel xrLabel7;
        private DevExpress.XtraReports.UI.XRLabel xrLabel5;
        private DevExpress.XtraReports.UI.XRLabel xrLabel3;
        private DevExpress.XtraReports.UI.XRLabel xrLabel2;
        private DevExpress.XtraReports.UI.XRLabel xrLabel60;
        private DevExpress.XtraReports.UI.XRLabel xrLabel58;
        private DevExpress.XtraReports.UI.XRLabel xrLabel12;
        private DevExpress.XtraReports.UI.XRLine xrLine1;
        private DevExpress.XtraReports.UI.XRLabel xrLabel18;
        private DevExpress.XtraReports.UI.XRLabel xrLabel19;
        private DevExpress.XtraReports.UI.XRLabel xrLabel20;
        private DevExpress.XtraReports.UI.XRLabel xrLabel30;
        private DevExpress.XtraReports.UI.XRLine xrLine2;
        private DevExpress.XtraReports.UI.XRLabel xrLabel38;
        private DevExpress.XtraReports.UI.XRLabel xrLabel43;
        private System.Data.DataSet dataSet1;
        private System.Resources.ResourceManager _resources;
        public xtraReport11() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAABAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBRE4GIBoAAAAATwEAACZ4AHIAUABpA" +
                        "GMAdAB1AHIAZQBCAG8AeAAxAC4ASQBtAGEAZwBlAAAAAABAAAEAAAD/////AQAAAAAAAAAMAgAAAFFTe" +
                        "XN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva" +
                        "2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAA" +
                        "AAJAwAAAA8DAAAAbxUAAAL/2P/gABBKRklGAAEBAQBgAGAAAP/bAEMAAwICAwICAwMDAwQDAwQFCAUFB" +
                        "AQFCgcHBggMCgwMCwoLCw0OEhANDhEOCwsQFhARExQVFRUMDxcYFhQYEhQVFP/bAEMBAwQEBQQFCQUFC" +
                        "RQNCw0UFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFP/AABEIA" +
                        "GQAYwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDB" +
                        "QUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1N" +
                        "jc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanq" +
                        "KmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBA" +
                        "QEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxE" +
                        "yIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZ" +
                        "WZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS0" +
                        "9TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP002mjaakwabuxnPGPWs7HfqMClu" +
                        "xPaqWraxY6FZNdahdxWkC8F5mCj6D1PsK5Px98S4vDgns7IQTahGnmTyzsVgs07PKw7+iDJPpXzvqfxB" +
                        "vfE3iOK3027jl1GVvLXWtUX7ueohiwVjHocM30qJSSdj6LLslr45e0ekFr8v69X2R7zrXxnt7K3aSysW" +
                        "FsOBe6lKLSBvpvO5vwU1w17+0Q4kcf23pcKDjFnYz3eP+BHYD9R1rmPFPwk0+DTTJJrk+reJ7uFzbfbJ" +
                        "skyoN0iIBnBx0BPevJdJs7rVdRtrazhea5mdVSJF+YEevpjqaxlJp2Pt8syPLK9OVRNtR3urfPW91pvZ" +
                        "Huy/tBTIwJ11Y+cfv8AQZFUnuMiXPH9a6DQ/j415OkXn6NqpP8ADFO9pMfpHKAD/wB9V5n8Q9OufEmkT" +
                        "3unok9nYaldNLL0UKsaKRke4OPWuT+GfhKPxx4tt9NulZrNUaafbxtQD+tHNK9jRZPltfCSxM1y8qd9t" +
                        "Ld7JM+ttH+Juj6lcJbXLSaTetjbb36iPefRGztb8DXWg57/AP1vr6V8x+NvAV38MNGlv9G1Y3OiocS6R" +
                        "q37+N8njYD93g9sGr/wz+ME0EiW9p5k8ScyaHcS7pEHc20rcsAOfLbnHTNaqVnaR8fWyRVaLxOCfNDz6" +
                        "eWu34rzPo/aTRtNUdD1608RabFe2EongccHoQe4IOCCOhB6VojJAI6GtND5NqUZOMlZoZtNFSYNFGgtS" +
                        "TZkkbTkVw3xM8anw1aCytJYotRnjaTzpeUtYVHzzuPQdh3J/LttTu4NKsbi7uH8uCBDI7E8BQMmvjz4u" +
                        "+Lp7+5eCWXF5qgW7ulyA0cGP3EPXgAfOfVmpTfKj3cjy7+0sSov4V/X4f5LqbGi+FpviIsk96t5Y+GEL" +
                        "PaR+YFmvpDkPPIxJ3Nj5sc8HC5xXnfi7wdqPgXVY45HLwsRLaXyLhZBwRn+6w7qenNdZ4F+ME/hfTlsN" +
                        "RtpL2GHBtpI9u8KM4ikyOUBJYY5Br0j4dfDVvibqEniHXI2i8Nfa5LnTdJdAvmFzlpZPXP15rDlU1Zbn" +
                        "6NPF18mqTlibKitElrftbzfW/n2RyXhCw8Z+Pp7y70HSYtLt7mZLr+0b0cQzbNsrxAg/f5PQdq67RP2V" +
                        "7axxc3/AIjvPtBDF3stsWM/e+Y5688mvoCGzhtYY44kSONBhVRcBR2AFeHftVeIdQ0rQNK06zmlt4L6Z" +
                        "hPLEdpIUZC5HrWrhGKvLU+Pw2b4vMcWsJgrUozdtFd2S6t6vQhh/Z08I6lbS2em+IL9lY/vIortWUntu" +
                        "QDB6VXsPgz4q+F0s134WvbTWreT5prK+hEbyAdlcZx/Kvnvw/rN34a1e11DTppILuGRWAQn5uR8p9c5r" +
                        "7+092urG2mdfJeWNWKY6EgEilT5Z621O3O5Y/J3GE63tac76Nb279fRo+O/jN46vvEz2WnXel3mjXVs7" +
                        "S3NlcYIaTgKykffFWPA3wXk1KxN1ql49jesu63hglUTW3y7lkkXrz2Uc4r6Y+Ifwz0j4h6WbW+gCXCDN" +
                        "vdoMSwt2IP17V4hd+PNT+HzalpHieZv7YsrYxW5RQseqRkgJJvA3K6jOaUqaTvI6sFm88Vgo4XL4qE09" +
                        "Vu7N7rur7329BngXxjqfhPXriC9jzqFuvmXtvDymoQD/l5i7GRRycfeAOeeK+j7G9t9TtILq1kE9vOgk" +
                        "jkQ5DKehr4R1Dxlql1rtvq0l44u7eTzLfP/ACyGfuj1B7/U+tfUHwP8WwX0CWcJCWd5G17ZxjpE2cTxD" +
                        "2VzkD0YU6cuZ2OTiPKJUIRxNle2ttv66ryv2R6x5ftRVjyk7E4orex+dc6OD+L94qaJa6YW2rqFyElP/" +
                        "TFP3kn/AI6uK8l+G3hyx8U+Etb8Sa7Y215Jrd3I0X2iPeI1B2RKMcjt+ArrP2iNRe2juChINvpF06nuG" +
                        "kaOMH8mavmbQfFWreFZVfSdRnscc+XG5MefdDlT09KwnNKWp+k5FldbF5a3QnyybTv6atXW19O+x6jd/" +
                        "CjQ9X+I+ieHtJSNEcyXN99nkZkW3G0pkMOGPPHTBHNfTHiK4fwt4QvZ7C2XdZ2rGGFVyBtX5QB6CvG/2" +
                        "Zri48Ua54j8Sah5b3jrDaBoowihQOwHA7V9AuvmKQVBB6g85HoauCurrqfO59iascXDDV3zezSvd7t6v" +
                        "X529D4n0n9oHx1p121y+sC6Dnc1vcxAoM84HoK3/Efx2sfiFoB0nxV4b8xM7kurC42PE/8AeAYV7n4t+" +
                        "AfhDxT5kx0/+zrt8kz2TeWSfUjoa+TPHvhq38G+L9Q0iG8+3xWrBRKQNw4ztPuOlYy54bvQ+7yupk+dV" +
                        "F7KjyVI66aWt2advvNDw/qHgzQNTh1Ca01bWngk82K1uGhji3dtxUEmuv8AEf7T3irVUMemx22jQ9Mqh" +
                        "kk/M8CvIM9iea9v+C/wG0zx1ocet6rqEjwMzKLS1O0jacHe39KiEpS0iexmlDLcJFYzME520V7v5JbGl" +
                        "+zx8R/FPiHxvLpuq6jPqdnNbtIfOA/dMOQQQOM13v7RfgBPFPg6XUYIwdR03M6FR8zoPvJn8673wj4B0" +
                        "LwPbmHR9OjtAww8gGXf6setbN5At1bSwyKGSRGUj1BGDXVGD5eVn5Jis1pPNI43BQ9nFW02vbfbufO/w" +
                        "x0PwxHpSX+n6TYTygI8spmE7kNjcSG5Rl5BGAD2NYfhl38F+N9XsUlVhYXseqwLECuyCUhJY8Ef3WUkd" +
                        "PlrhtV8ca54XS68N2c621vYXc6JJCrB8FiCOu09OpXNV/AGo3OreMgt1czXc15az28kk0u9mzEcZJ9CB" +
                        "WPOtEj9FeV15Uq+JrTvGSuk227KzW+11dfM+7I182NXVshhmisDwhqJv/CukXDE7pLWNj9doorpsfjcq" +
                        "LjJx7HkP7SMBK6mSSN2jllA7hbiMmvHfCPhXwvqHhsXmtX81jqM8kkNpE10iR3LqM+hKgdMnGTX0P8AH" +
                        "HRhqYsAfuXcFxp5P+1JGSg/76UV89/DG4iutF1PSmtClzKR5t550MQ2EbfLd5FJA3dkG41zzS59T9UyS" +
                        "tP+ymqcmnFpuzS02/TU9b/ZInVdB1+BiPMjukYgHPBX1HXkGvW7T4k+GbzUpNOTWLVL+NtjW0z+XIG7D" +
                        "DY5Pb1r51/Zs1uTwn8RdQ0C+YxtdK0G08Dzo2JAz7jNdz+1F4ChuvDDeLrOzim1HS8NcxunFzbZ+dGI5" +
                        "46gjkV6OApUsRONGo2r6Jrv0ufnXHUsRgMXUxVGKkrKVnfVWV7PurM9J+KHjeLwF4Nv9VYgyRrshj/vS" +
                        "Nwo/rXw4sN/r+qhAr3mo302OOTLKx6D867SXxsqeHNJ0vX7691L4ea0wk0/UXYPd6ROhw0Tk/fCH16rg" +
                        "j0r234f/DTwj8JdPl8ZX2ux6hAsAePUp1CxQxHugGeT+daY7La+GnFSV09mur2t5NPdHbwhxjlNDLq1b" +
                        "av1i+1lZ32t1ueKfEf4M6v8OdM0+/umW6tZ0VZ5EHEEp/hPHTtmtf8AZ5+Ij+C/Fsel3T40rVHEZVuBF" +
                        "N0Vh9ehr6K1bxb4W8Tx2Ph7UpAv9u2xe1t7qJoxOhH8JIwGAIOOtfOfxJ8C6D8DNTt9RudVbV5Wk8zTd" +
                        "ERNssjA/L5jg/cU45xzXJTwVadaNOnFtvb/AD9D3/8AXPLcTlVeGbzS5U9Ur36q1ut7W7n1xqWtWOi2h" +
                        "ub+7hsrcdZbiQIv5k1S0DxhpHi23ml0i+S+ihO1pYgdmfQNjB/Cvj+5s9d+IPxD0PQNevpb7xNqYW4vA" +
                        "f8AU6RakFvKij6Byv3mOSNwAr6s1640z4ZeALp7aGK0stPttsUS4GTjC/iT3716uNwVPAwipSvN66bW7" +
                        "+d+h+OZPmFfOMS40YWgmlrq2308raXPlb+ytO8VfEbxRDc2s04N1PMs8V4sEcSqxyzsVIxUfh3RU0X4s" +
                        "WtmkU0EUG6QJNKsjBfKZs714IIOasfDUWpW91EZn1lw7I1peJDcQZI3ALKNkm7PTJ+lVvBf2jW/E+t6k" +
                        "8s9xMIHijlmADs8hEaZA4B+Y8Djg4r53sf05KU6ca0L+7GCjrfeyV0r7fJH1d4AieHwRoSnOfscR/NQa" +
                        "K6TS7AWGm2tsv3YYljH4DFFddz8RqVlKcn3Zi/EPRJdc8K3kNv/AMfsQE9u3pIh3L+ox+NfIerOPCnj+" +
                        "LUoXe1sNR/0lHREMkQc4kRS+VVlcMM9sfSvuAgHHqO9fPHxs+GqmeVIQIrW/mNxZSHAS3uyPniJ7JMB1" +
                        "6Bh2zms5xvqj6jhrHwoVJYar8M0/wAf8t/S55j450E6Lq+i674fLi5uJGcRo7yubiPDNKrMAXUqcM+AM" +
                        "5r6U8A+NtL+MfgOQSiMyyQG3vrViPkYjDceh6g18z+CNejEs+ia0jIceTJ50phZlU42STHmOOMDO1R8x" +
                        "wDUEMXiD4V63/b+iGaLS5JSkE0uG82IjKCWMH5dy4I3YznNRCfI+eJ9ZmeVRzOisFWlapFe5J7ST6N9d" +
                        "NF6fIqQ+EpPD9z4o+Euu7YJbyU3mg3k+QhuFHyYboBIgCk+vFcLN4/1rTvA1x4D1WGVYrW/W4EM6kPbs" +
                        "hO6IjupPI7DFfUi+OPh58eNHi0zxZax6dqicp50nltG396KbjH0OKdq37KekeKzbvf+IbrUoo0CR3bon" +
                        "2ooBwrSjG8AYA3AketfouDzzCVF/tC7N6X95dV69UfyZnPBWb5bVdOjG1rpX0vFu9n0dujXQ5X9qTxrD" +
                        "p8Xwz1K2BklimGpRqpOSoRSACPXPWvH9PuJviR4p1zx/wCLry4stHsMymeFsN5v/LG2gznLdDwOMZNfV" +
                        "vxC/Z00D4g2mhxXF1cWx0e3+y2+G3K8YAGHHGT8vrWBN8FfA/hGKzvPGGspf2WnjFnps5SCyg7krCv32" +
                        "PcsST3rPDZrg8NhVFX51dXtrZu9lfTX10MsVw3muYY92jeD5Wo30bSSu0u3ZLUwP2TfAuoXV1q3xB10y" +
                        "yXOokpaSXRy7ITl5CffAA9qzP2kPilF4j1RfDemS+bp9pJuupE5WWYdEHqF6n3p/wATf2hzrlv/AGJ4V" +
                        "B0rTGHktesux3TpiNR91ffr7VhaV4fsfhxaW+pXVxbNq/kyukMM+ftVs20LPCzAhZFJ+6euTnFfGY/GS" +
                        "x9aVRqy7dktkj+jeEeF/wDVqhTniU5VNXGPVye7fb9Ope1B7Twb4ATSNT8m4sb2GWO31C0dJo5ZWUNmR" +
                        "CN2V6Kymtz4B+DWe50tZYyHZhqt1n+FQNluh+p3Pj2Feeadajx74putZuLaW30aOUN9kjOfNkbhIE6De" +
                        "7fM2MdzwK+tfh74Tk8N6MZLtUGqXj+fc7D8qHGFjU/3UXCiuGC5nfoe7neK+oYV0b/vJ6y9X83snd9L2" +
                        "OsGMDHSikC0V0H5XqLms7WdEtdf0+5sb6FJ7WdNjo3cf5wR6GrxfIo3mg1jeLUouzR8u/FP4Vz6fqME1" +
                        "wU+0qyra6ncANDehfuw3HZZOMBzww64Nee/ELxrqmv30OnalpyaJHAytcWkIw0jDA8xyfv4XhewHSvtn" +
                        "UbC21WyltbuCOe2lBV4nUMrj0INeSeM/gcl3a+XZJDq2nrny7C/crLB/wBcZxl1/wB1sj6VjKn2P0LKe" +
                        "IKUXCONjdxuovtft0+T07NHkzeHND8R6tLY/YNNt9Cgg861v7As8zggIiy4ySxdgSMAjBrOsPC3ijw/p" +
                        "08ljr17BeQllWC0lYpMwmEShOe5B6gCjxD8JLzw1emWzurvSGVw6jUomRAwPGLiMMpx2LAVXstL8d20S" +
                        "Jp8seoRIYyrWV3DPgI5dB97ONxJPHOay23R9fTnCcF7GvFxdtJ/jvf52/A0tcT4lRQLHPrt/Ofs6zTRr" +
                        "d7RFucoilsgEkjsTVIfCrVJNXm/4SLVI7aSNI5Q0pa5L7nCYbnICsRu9M96fq9h8Qtbilhm0KS0gljjj" +
                        "KRRRQxqEcyKVJbg7iTmquqaJ4t8RXa/2zrdpFPs8ry/tIllKkjKmOEMWORnnHIpWTfU0pylTikqlOG9+" +
                        "VJvpslv16FOPVdGi0rxLYazpsMeptLmC4sI8EOg2hRnhUyCTzzVXw74d1LxLZ2P2+5nt9CgcrDIw3lmJ" +
                        "5jgTq7E+nA74r0rwb8BZbgw3C6dJfvuDfaNZTyIIz6rAMs59N5HuK918KfDix8OTpe3Eh1PVAoQXUihV" +
                        "iX+7EgG2Nfpz71pGm3ueRjuIcLglKOFblJ6+jtbRa2+f3GF8MPhguiR2moX1qLV4EIstPByLYH70kh/i" +
                        "lbu3YcCvUegpitjt9eaA5A561ukkrI/KcRXq4qq6tV3ZJRTN9FM5+UZRRRQUFJ2OOPpRRQNEWxJYNzor" +
                        "bicgjisW+8A+HdUl3Xei2U7k8s8Ck/niiiguFScJe7Joqx/CvwkkZkHh+w3DoDCpH5GtzS9A03S1CWVj" +
                        "b2i4/5YRKv8hRRUFzrVai9+Tfqy0Bltvp371JRRVmHQKKKKBoKKKKBH/9kL";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraPrinting.BarCode.Code128Generator code128Generator1 = new DevExpress.XtraPrinting.BarCode.Code128Generator();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.PageFooter = new DevExpress.XtraReports.UI.PageFooterBand();
            this.病人分组头 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.病人分组尾 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.xrLabel28 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel26 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel1 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel47 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel46 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel32 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel31 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel29 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel4 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel24 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel17 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel16 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel15 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel21 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel22 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel23 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel25 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLine3 = new DevExpress.XtraReports.UI.XRLine();
            this.xrLabel27 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel59 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrPictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.xrBarCode1 = new DevExpress.XtraReports.UI.XRBarCode();
            this.xrLabel13 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel14 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel11 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel10 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel6 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel9 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel8 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel7 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel5 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel3 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel2 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel60 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel58 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel12 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLine1 = new DevExpress.XtraReports.UI.XRLine();
            this.xrLabel18 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel19 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel20 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel30 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLine2 = new DevExpress.XtraReports.UI.XRLine();
            this.xrLabel38 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel43 = new DevExpress.XtraReports.UI.XRLabel();
            this.dataSet1 = new XtraReportSerialization.dataSet1();
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel28,
                        this.xrLabel26,
                        this.xrLabel1,
                        this.xrLabel47,
                        this.xrLabel46});
            this.Detail.Dpi = 254F;
            this.Detail.Height = 50;
            this.Detail.KeepTogether = true;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 254F);
            this.Detail.SortFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("dict_combine.com_seq", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("dict_combine_mi.com_sort", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // PageFooter
            // 
            this.PageFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel32,
                        this.xrLabel31,
                        this.xrLabel29,
                        this.xrLabel4,
                        this.xrLabel24,
                        this.xrLabel17,
                        this.xrLabel16,
                        this.xrLabel15,
                        this.xrLabel21,
                        this.xrLabel22,
                        this.xrLabel23,
                        this.xrLabel25,
                        this.xrLine3,
                        this.xrLabel27});
            this.PageFooter.Dpi = 254F;
            this.PageFooter.Height = 151;
            this.PageFooter.Name = "PageFooter";
            this.PageFooter.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 254F);
            this.PageFooter.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // 病人分组头
            // 
            this.病人分组头.Dpi = 254F;
            this.病人分组头.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("标识ID", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.病人分组头.Height = 0;
            this.病人分组头.Name = "病人分组头";
            // 
            // 病人分组尾
            // 
            this.病人分组尾.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel59});
            this.病人分组尾.Dpi = 254F;
            this.病人分组尾.GroupUnion = DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail;
            this.病人分组尾.Height = 53;
            this.病人分组尾.KeepTogether = true;
            this.病人分组尾.Name = "病人分组尾";
            this.病人分组尾.PageBreak = DevExpress.XtraReports.UI.PageBreak.AfterBand;
            this.病人分组尾.PrintAtBottom = true;
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrPictureBox1,
                        this.xrBarCode1,
                        this.xrLabel13,
                        this.xrLabel14,
                        this.xrLabel11,
                        this.xrLabel10,
                        this.xrLabel6,
                        this.xrLabel9,
                        this.xrLabel8,
                        this.xrLabel7,
                        this.xrLabel5,
                        this.xrLabel3,
                        this.xrLabel2,
                        this.xrLabel60,
                        this.xrLabel58,
                        this.xrLabel12,
                        this.xrLine1,
                        this.xrLabel18,
                        this.xrLabel19,
                        this.xrLabel20,
                        this.xrLabel30,
                        this.xrLine2,
                        this.xrLabel38,
                        this.xrLabel43});
            this.PageHeader.Dpi = 254F;
            this.PageHeader.Height = 299;
            this.PageHeader.Name = "PageHeader";
            // 
            // xrLabel28
            // 
            this.xrLabel28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.检验结果", "")});
            this.xrLabel28.Dpi = 254F;
            this.xrLabel28.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLabel28.Location = new System.Drawing.Point(757, 8);
            this.xrLabel28.Name = "xrLabel28";
            this.xrLabel28.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel28.Size = new System.Drawing.Size(254, 42);
            this.xrLabel28.Text = "xrLabel28";
            // 
            // xrLabel26
            // 
            this.xrLabel26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.参考值", "")});
            this.xrLabel26.Dpi = 254F;
            this.xrLabel26.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLabel26.Location = new System.Drawing.Point(1495, 8);
            this.xrLabel26.Name = "xrLabel26";
            this.xrLabel26.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel26.Size = new System.Drawing.Size(254, 42);
            this.xrLabel26.Text = "xrLabel26";
            // 
            // xrLabel1
            // 
            this.xrLabel1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.范围标识", "")});
            this.xrLabel1.Dpi = 254F;
            this.xrLabel1.Font = new System.Drawing.Font("Times New Roman", 9.5F);
            this.xrLabel1.Location = new System.Drawing.Point(1011, 8);
            this.xrLabel1.Name = "xrLabel1";
            this.xrLabel1.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel1.Size = new System.Drawing.Size(106, 42);
            this.xrLabel1.Text = "xrLabel1";
            // 
            // xrLabel47
            // 
            this.xrLabel47.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.结果单位", "")});
            this.xrLabel47.Dpi = 254F;
            this.xrLabel47.Font = new System.Drawing.Font("宋体", 9F);
            this.xrLabel47.Location = new System.Drawing.Point(1138, 8);
            this.xrLabel47.Name = "xrLabel47";
            this.xrLabel47.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel47.Size = new System.Drawing.Size(344, 42);
            this.xrLabel47.StylePriority.UseTextAlignment = false;
            this.xrLabel47.Text = "xrLabel47";
            this.xrLabel47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel46
            // 
            this.xrLabel46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.检查项目名称", "")});
            this.xrLabel46.Dpi = 254F;
            this.xrLabel46.Font = new System.Drawing.Font("宋体", 9F);
            this.xrLabel46.Location = new System.Drawing.Point(151, 8);
            this.xrLabel46.Name = "xrLabel46";
            this.xrLabel46.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel46.Size = new System.Drawing.Size(548, 42);
            this.xrLabel46.StylePriority.UseTextAlignment = false;
            this.xrLabel46.Text = "xrLabel46";
            this.xrLabel46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel32
            // 
            this.xrLabel32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.仪器代码", "")});
            this.xrLabel32.Dpi = 254F;
            this.xrLabel32.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel32.Location = new System.Drawing.Point(238, 53);
            this.xrLabel32.Name = "xrLabel32";
            this.xrLabel32.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel32.Size = new System.Drawing.Size(254, 42);
            this.xrLabel32.Text = "xrLabel32";
            // 
            // xrLabel31
            // 
            this.xrLabel31.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.报告者", "")});
            this.xrLabel31.Dpi = 254F;
            this.xrLabel31.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel31.Location = new System.Drawing.Point(1519, 82);
            this.xrLabel31.Name = "xrLabel31";
            this.xrLabel31.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel31.Size = new System.Drawing.Size(254, 42);
            this.xrLabel31.Text = "xrLabel31";
            // 
            // xrLabel29
            // 
            this.xrLabel29.Dpi = 254F;
            this.xrLabel29.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel29.Location = new System.Drawing.Point(1312, 16);
            this.xrLabel29.Name = "xrLabel29";
            this.xrLabel29.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel29.Size = new System.Drawing.Size(189, 43);
            this.xrLabel29.StylePriority.UseTextAlignment = false;
            this.xrLabel29.Text = "检测时间：";
            this.xrLabel29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel4
            // 
            this.xrLabel4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.报告日期", "")});
            this.xrLabel4.Dpi = 254F;
            this.xrLabel4.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel4.Location = new System.Drawing.Point(1500, 16);
            this.xrLabel4.Name = "xrLabel4";
            this.xrLabel4.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel4.Size = new System.Drawing.Size(363, 43);
            this.xrLabel4.Text = "xrLabel4";
            // 
            // xrLabel24
            // 
            this.xrLabel24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.检验者", "")});
            this.xrLabel24.Dpi = 254F;
            this.xrLabel24.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel24.Location = new System.Drawing.Point(844, 51);
            this.xrLabel24.Name = "xrLabel24";
            this.xrLabel24.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel24.Size = new System.Drawing.Size(254, 42);
            this.xrLabel24.Text = "xrLabel24";
            // 
            // xrLabel17
            // 
            this.xrLabel17.Dpi = 254F;
            this.xrLabel17.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel17.Location = new System.Drawing.Point(712, 53);
            this.xrLabel17.Name = "xrLabel17";
            this.xrLabel17.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel17.Size = new System.Drawing.Size(209, 58);
            this.xrLabel17.Text = "检测者：";
            // 
            // xrLabel16
            // 
            this.xrLabel16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.接收日期", "")});
            this.xrLabel16.Dpi = 254F;
            this.xrLabel16.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel16.Location = new System.Drawing.Point(857, 13);
            this.xrLabel16.Name = "xrLabel16";
            this.xrLabel16.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel16.Size = new System.Drawing.Size(391, 42);
            this.xrLabel16.Text = "xrLabel16";
            // 
            // xrLabel15
            // 
            this.xrLabel15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.标本采集时间", "")});
            this.xrLabel15.Dpi = 254F;
            this.xrLabel15.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel15.Location = new System.Drawing.Point(246, 16);
            this.xrLabel15.Name = "xrLabel15";
            this.xrLabel15.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel15.Size = new System.Drawing.Size(348, 42);
            this.xrLabel15.Text = "xrLabel15";
            // 
            // xrLabel21
            // 
            this.xrLabel21.Dpi = 254F;
            this.xrLabel21.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel21.Location = new System.Drawing.Point(64, 11);
            this.xrLabel21.Name = "xrLabel21";
            this.xrLabel21.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel21.Size = new System.Drawing.Size(190, 42);
            this.xrLabel21.StylePriority.UseTextAlignment = false;
            this.xrLabel21.Text = "采样时间：";
            this.xrLabel21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel22
            // 
            this.xrLabel22.Dpi = 254F;
            this.xrLabel22.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel22.Location = new System.Drawing.Point(677, 11);
            this.xrLabel22.Name = "xrLabel22";
            this.xrLabel22.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel22.Size = new System.Drawing.Size(212, 42);
            this.xrLabel22.StylePriority.UseTextAlignment = false;
            this.xrLabel22.Text = "接收时间：";
            this.xrLabel22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel23
            // 
            this.xrLabel23.Dpi = 254F;
            this.xrLabel23.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel23.Location = new System.Drawing.Point(1347, 79);
            this.xrLabel23.Name = "xrLabel23";
            this.xrLabel23.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel23.Size = new System.Drawing.Size(169, 42);
            this.xrLabel23.StylePriority.UseTextAlignment = false;
            this.xrLabel23.Text = "审核者：";
            this.xrLabel23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel25
            // 
            this.xrLabel25.Dpi = 254F;
            this.xrLabel25.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel25.Location = new System.Drawing.Point(64, 53);
            this.xrLabel25.Name = "xrLabel25";
            this.xrLabel25.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel25.Size = new System.Drawing.Size(212, 42);
            this.xrLabel25.StylePriority.UseTextAlignment = false;
            this.xrLabel25.Text = "仪器编号：";
            this.xrLabel25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLine3
            // 
            this.xrLine3.Dpi = 254F;
            this.xrLine3.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLine3.LineWidth = 3;
            this.xrLine3.Location = new System.Drawing.Point(21, 8);
            this.xrLine3.Name = "xrLine3";
            this.xrLine3.Size = new System.Drawing.Size(1842, 5);
            // 
            // xrLabel27
            // 
            this.xrLabel27.Dpi = 254F;
            this.xrLabel27.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel27.Location = new System.Drawing.Point(64, 95);
            this.xrLabel27.Name = "xrLabel27";
            this.xrLabel27.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel27.Size = new System.Drawing.Size(1164, 42);
            this.xrLabel27.StylePriority.UseTextAlignment = false;
            this.xrLabel27.Text = "本报告仅对检测标本负责，如有疑问，请咨询检验科微生物科室。";
            this.xrLabel27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrLabel59
            // 
            this.xrLabel59.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.备注评价2", "")});
            this.xrLabel59.Dpi = 254F;
            this.xrLabel59.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLabel59.Location = new System.Drawing.Point(42, 8);
            this.xrLabel59.Name = "xrLabel59";
            this.xrLabel59.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel59.Size = new System.Drawing.Size(1820, 42);
            this.xrLabel59.Text = "xrLabel59";
            this.xrLabel59.WordWrap = false;
            // 
            // xrPictureBox1
            // 
            this.xrPictureBox1.Dpi = 254F;
            this.xrPictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("xrPictureBox1.Image")));
            this.xrPictureBox1.Location = new System.Drawing.Point(106, 29);
            this.xrPictureBox1.Name = "xrPictureBox1";
            this.xrPictureBox1.Size = new System.Drawing.Size(106, 98);
            this.xrPictureBox1.Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage;
            // 
            // xrBarCode1
            // 
            this.xrBarCode1.AutoModule = true;
            this.xrBarCode1.Dpi = 254F;
            this.xrBarCode1.Location = new System.Drawing.Point(1545, 28);
            this.xrBarCode1.Module = 254F;
            this.xrBarCode1.Name = "xrBarCode1";
            this.xrBarCode1.PaddingInfo = new DevExpress.XtraPrinting.PaddingInfo(25, 25, 0, 0, 254F);
            this.xrBarCode1.Size = new System.Drawing.Size(275, 69);
            this.xrBarCode1.Symbology = code128Generator1;
            // 
            // xrLabel13
            // 
            this.xrLabel13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.组合项目", "")});
            this.xrLabel13.Dpi = 254F;
            this.xrLabel13.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel13.Location = new System.Drawing.Point(1270, 179);
            this.xrLabel13.Name = "xrLabel13";
            this.xrLabel13.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel13.Size = new System.Drawing.Size(561, 42);
            this.xrLabel13.Text = "xrLabel13";
            // 
            // xrLabel14
            // 
            this.xrLabel14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.样本号", "")});
            this.xrLabel14.Dpi = 254F;
            this.xrLabel14.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel14.Location = new System.Drawing.Point(1670, 138);
            this.xrLabel14.Name = "xrLabel14";
            this.xrLabel14.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel14.Size = new System.Drawing.Size(188, 42);
            this.xrLabel14.Text = "xrLabel14";
            // 
            // xrLabel11
            // 
            this.xrLabel11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.申请医生", "")});
            this.xrLabel11.Dpi = 254F;
            this.xrLabel11.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel11.Location = new System.Drawing.Point(1270, 132);
            this.xrLabel11.Name = "xrLabel11";
            this.xrLabel11.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel11.Size = new System.Drawing.Size(254, 42);
            this.xrLabel11.Text = "xrLabel11";
            // 
            // xrLabel10
            // 
            this.xrLabel10.Dpi = 254F;
            this.xrLabel10.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel10.Location = new System.Drawing.Point(1095, 183);
            this.xrLabel10.Name = "xrLabel10";
            this.xrLabel10.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel10.Size = new System.Drawing.Size(212, 42);
            this.xrLabel10.Text = "检测项目：";
            // 
            // xrLabel6
            // 
            this.xrLabel6.Dpi = 254F;
            this.xrLabel6.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel6.Location = new System.Drawing.Point(1516, 136);
            this.xrLabel6.Name = "xrLabel6";
            this.xrLabel6.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel6.Size = new System.Drawing.Size(212, 42);
            this.xrLabel6.Text = "检验编号：";
            // 
            // xrLabel9
            // 
            this.xrLabel9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.检测内容", "")});
            this.xrLabel9.Dpi = 254F;
            this.xrLabel9.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel9.Location = new System.Drawing.Point(785, 187);
            this.xrLabel9.Name = "xrLabel9";
            this.xrLabel9.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel9.Size = new System.Drawing.Size(233, 42);
            this.xrLabel9.Text = "xrLabel9";
            // 
            // xrLabel8
            // 
            this.xrLabel8.Dpi = 254F;
            this.xrLabel8.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel8.Location = new System.Drawing.Point(595, 124);
            this.xrLabel8.Name = "xrLabel8";
            this.xrLabel8.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel8.Size = new System.Drawing.Size(212, 58);
            this.xrLabel8.Text = "送检科室：";
            // 
            // xrLabel7
            // 
            this.xrLabel7.Dpi = 254F;
            this.xrLabel7.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel7.Location = new System.Drawing.Point(593, 179);
            this.xrLabel7.Name = "xrLabel7";
            this.xrLabel7.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel7.Size = new System.Drawing.Size(193, 57);
            this.xrLabel7.Text = "检测内容：";
            // 
            // xrLabel5
            // 
            this.xrLabel5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.科室名称", "")});
            this.xrLabel5.Dpi = 254F;
            this.xrLabel5.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel5.Location = new System.Drawing.Point(770, 132);
            this.xrLabel5.Name = "xrLabel5";
            this.xrLabel5.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel5.Size = new System.Drawing.Size(331, 42);
            this.xrLabel5.Text = "xrLabel5";
            // 
            // xrLabel3
            // 
            this.xrLabel3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.标本名称", "")});
            this.xrLabel3.Dpi = 254F;
            this.xrLabel3.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel3.Location = new System.Drawing.Point(251, 185);
            this.xrLabel3.Name = "xrLabel3";
            this.xrLabel3.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel3.Size = new System.Drawing.Size(254, 42);
            this.xrLabel3.Text = "xrLabel3";
            // 
            // xrLabel2
            // 
            this.xrLabel2.Dpi = 254F;
            this.xrLabel2.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel2.Location = new System.Drawing.Point(77, 185);
            this.xrLabel2.Name = "xrLabel2";
            this.xrLabel2.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel2.Size = new System.Drawing.Size(190, 42);
            this.xrLabel2.Text = "标本名称：";
            // 
            // xrLabel60
            // 
            this.xrLabel60.Dpi = 254F;
            this.xrLabel60.Font = new System.Drawing.Font("Microsoft Sans Serif", 16F, System.Drawing.FontStyle.Bold);
            this.xrLabel60.Location = new System.Drawing.Point(318, 37);
            this.xrLabel60.Name = "xrLabel60";
            this.xrLabel60.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel60.Size = new System.Drawing.Size(1099, 77);
            this.xrLabel60.StylePriority.UseFont = false;
            this.xrLabel60.Text = "昆明市儿童医院环境卫生学检测报告";
            this.xrLabel60.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // xrLabel58
            // 
            this.xrLabel58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.条码号", "")});
            this.xrLabel58.Dpi = 254F;
            this.xrLabel58.Font = new System.Drawing.Font("宋体", 9F);
            this.xrLabel58.Location = new System.Drawing.Point(1524, 98);
            this.xrLabel58.Name = "xrLabel58";
            this.xrLabel58.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel58.Size = new System.Drawing.Size(280, 42);
            this.xrLabel58.Text = "xrLabel58";
            this.xrLabel58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // xrLabel12
            // 
            this.xrLabel12.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "可设计字段.申请时间", "{0:yyyy-MM-dd HH:mm }")});
            this.xrLabel12.Dpi = 254F;
            this.xrLabel12.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel12.Location = new System.Drawing.Point(254, 132);
            this.xrLabel12.Name = "xrLabel12";
            this.xrLabel12.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel12.Size = new System.Drawing.Size(296, 42);
            this.xrLabel12.Text = "xrLabel37";
            // 
            // xrLine1
            // 
            this.xrLine1.Dpi = 254F;
            this.xrLine1.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLine1.LineWidth = 3;
            this.xrLine1.Location = new System.Drawing.Point(24, 294);
            this.xrLine1.Name = "xrLine1";
            this.xrLine1.Size = new System.Drawing.Size(1842, 5);
            // 
            // xrLabel18
            // 
            this.xrLabel18.Dpi = 254F;
            this.xrLabel18.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel18.Location = new System.Drawing.Point(1476, 251);
            this.xrLabel18.Name = "xrLabel18";
            this.xrLabel18.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel18.Size = new System.Drawing.Size(254, 42);
            this.xrLabel18.Text = "参　考　值";
            // 
            // xrLabel19
            // 
            this.xrLabel19.Dpi = 254F;
            this.xrLabel19.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel19.Location = new System.Drawing.Point(1124, 251);
            this.xrLabel19.Name = "xrLabel19";
            this.xrLabel19.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel19.Size = new System.Drawing.Size(148, 42);
            this.xrLabel19.Text = "单　位";
            // 
            // xrLabel20
            // 
            this.xrLabel20.Dpi = 254F;
            this.xrLabel20.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel20.Location = new System.Drawing.Point(754, 251);
            this.xrLabel20.Name = "xrLabel20";
            this.xrLabel20.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel20.Size = new System.Drawing.Size(127, 42);
            this.xrLabel20.Text = "结　果";
            // 
            // xrLabel30
            // 
            this.xrLabel30.Dpi = 254F;
            this.xrLabel30.Font = new System.Drawing.Font("Times New Roman", 9F, System.Drawing.FontStyle.Bold);
            this.xrLabel30.Location = new System.Drawing.Point(172, 251);
            this.xrLabel30.Name = "xrLabel30";
            this.xrLabel30.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel30.Size = new System.Drawing.Size(190, 42);
            this.xrLabel30.Text = "项　　目";
            // 
            // xrLine2
            // 
            this.xrLine2.Dpi = 254F;
            this.xrLine2.Font = new System.Drawing.Font("Times New Roman", 9F);
            this.xrLine2.LineWidth = 3;
            this.xrLine2.Location = new System.Drawing.Point(24, 238);
            this.xrLine2.Name = "xrLine2";
            this.xrLine2.Size = new System.Drawing.Size(1842, 21);
            // 
            // xrLabel38
            // 
            this.xrLabel38.Dpi = 254F;
            this.xrLabel38.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel38.Location = new System.Drawing.Point(1093, 135);
            this.xrLabel38.Name = "xrLabel38";
            this.xrLabel38.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel38.Size = new System.Drawing.Size(212, 37);
            this.xrLabel38.Text = "送检人员：";
            // 
            // xrLabel43
            // 
            this.xrLabel43.Dpi = 254F;
            this.xrLabel43.Font = new System.Drawing.Font("Microsoft Sans Serif", 9F);
            this.xrLabel43.Location = new System.Drawing.Point(77, 127);
            this.xrLabel43.Name = "xrLabel43";
            this.xrLabel43.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.xrLabel43.Size = new System.Drawing.Size(212, 61);
            this.xrLabel43.Text = "申请时间：";
            // 
            // dataSet1
            // 
            this.dataSet1.DataSetName = "dataSet1";
            // 
            // xtraReport11
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.PageFooter,
                        this.病人分组头,
                        this.病人分组尾,
                        this.PageHeader});
            this.DataSource = this.dataSet1;
            this.Dpi = 254F;
            this.Margins = new System.Drawing.Printing.Margins(0, 0, 5, 5);
            this.Name = "xtraReport11";
            this.PageHeight = 1430;
            this.PageWidth = 1900;
            this.PaperKind = System.Drawing.Printing.PaperKind.Custom;
            this.ReportUnit = DevExpress.XtraReports.UI.ReportUnit.TenthsOfAMillimeter;
            this.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.Version = "8.2";
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataSet1 : global::System.Data.DataSet {
        private 可设计字段DataTable table可设计字段;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["可设计字段"] != null)) {
                    base.Tables.Add(new 可设计字段DataTable(ds.Tables["可设计字段"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 可设计字段DataTable 可设计字段 {
            get {
                return this.table可设计字段;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataSet1 cln = ((dataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["可设计字段"] != null)) {
                    base.Tables.Add(new 可设计字段DataTable(ds.Tables["可设计字段"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table可设计字段 = ((可设计字段DataTable)(base.Tables["可设计字段"]));
            if ((initTable == true)) {
                if ((this.table可设计字段 != null)) {
                    this.table可设计字段.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table可设计字段 = new 可设计字段DataTable();
            base.Tables.Add(this.table可设计字段);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize可设计字段() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataSet1 ds = new dataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void 可设计字段RowChangeEventHandler(object sender, 可设计字段RowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 可设计字段DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn column检查项目名称;
            private global::System.Data.DataColumn column检验结果;
            private global::System.Data.DataColumn column结果单位;
            private global::System.Data.DataColumn column样本号;
            private global::System.Data.DataColumn column范围标识;
            private global::System.Data.DataColumn columnwj_flag;
            private global::System.Data.DataColumn column参考值;
            private global::System.Data.DataColumn column检测内容;
            private global::System.Data.DataColumn column编号;
            private global::System.Data.DataColumn column申请医生;
            private global::System.Data.DataColumn column申请时间;
            private global::System.Data.DataColumn column条码号;
            private global::System.Data.DataColumn column科室名称;
            private global::System.Data.DataColumn column标本名称;
            private global::System.Data.DataColumn column仪器代码;
            private global::System.Data.DataColumn column备注评价;
            private global::System.Data.DataColumn column组合项目;
            private global::System.Data.DataColumn column标本采集时间;
            private global::System.Data.DataColumn column接收日期;
            private global::System.Data.DataColumn column报告日期;
            private global::System.Data.DataColumn column检验者;
            private global::System.Data.DataColumn column报告者;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段DataTable() {
                this.TableName = "可设计字段";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 可设计字段DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 可设计字段DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检查项目名称Column {
                get {
                    return this.column检查项目名称;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验结果Column {
                get {
                    return this.column检验结果;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 结果单位Column {
                get {
                    return this.column结果单位;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 样本号Column {
                get {
                    return this.column样本号;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 范围标识Column {
                get {
                    return this.column范围标识;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wj_flagColumn {
                get {
                    return this.columnwj_flag;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 参考值Column {
                get {
                    return this.column参考值;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检测内容Column {
                get {
                    return this.column检测内容;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请医生Column {
                get {
                    return this.column申请医生;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 申请时间Column {
                get {
                    return this.column申请时间;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 条码号Column {
                get {
                    return this.column条码号;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 科室名称Column {
                get {
                    return this.column科室名称;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 标本名称Column {
                get {
                    return this.column标本名称;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 仪器代码Column {
                get {
                    return this.column仪器代码;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注评价Column {
                get {
                    return this.column备注评价;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 组合项目Column {
                get {
                    return this.column组合项目;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 标本采集时间Column {
                get {
                    return this.column标本采集时间;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 接收日期Column {
                get {
                    return this.column接收日期;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报告日期Column {
                get {
                    return this.column报告日期;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检验者Column {
                get {
                    return this.column检验者;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 报告者Column {
                get {
                    return this.column报告者;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段Row this[int index] {
                get {
                    return ((可设计字段Row)(this.Rows[index]));
                }
            }
            public event 可设计字段RowChangeEventHandler 可设计字段RowChanging;
            public event 可设计字段RowChangeEventHandler 可设计字段RowChanged;
            public event 可设计字段RowChangeEventHandler 可设计字段RowDeleting;
            public event 可设计字段RowChangeEventHandler 可设计字段RowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add可设计字段Row(可设计字段Row row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段Row Add可设计字段Row(
                        string 检查项目名称, 
                        string 检验结果, 
                        string 结果单位, 
                        string 样本号, 
                        string 范围标识, 
                        string wj_flag, 
                        string 参考值, 
                        string 检测内容, 
                        string 编号, 
                        string 申请医生, 
                        System.DateTime 申请时间, 
                        string 条码号, 
                        string 科室名称, 
                        string 标本名称, 
                        string 仪器代码, 
                        string 备注评价, 
                        string 组合项目, 
                        System.DateTime 标本采集时间, 
                        System.DateTime 接收日期, 
                        System.DateTime 报告日期, 
                        string 检验者, 
                        string 报告者) {
                可设计字段Row row可设计字段Row = ((可设计字段Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        检查项目名称,
                        检验结果,
                        结果单位,
                        样本号,
                        范围标识,
                        wj_flag,
                        参考值,
                        检测内容,
                        编号,
                        申请医生,
                        申请时间,
                        条码号,
                        科室名称,
                        标本名称,
                        仪器代码,
                        备注评价,
                        组合项目,
                        标本采集时间,
                        接收日期,
                        报告日期,
                        检验者,
                        报告者};
                row可设计字段Row.ItemArray = columnValuesArray;
                this.Rows.Add(row可设计字段Row);
                return row可设计字段Row;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                可设计字段DataTable cln = ((可设计字段DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 可设计字段DataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column检查项目名称 = base.Columns["检查项目名称"];
                this.column检验结果 = base.Columns["检验结果"];
                this.column结果单位 = base.Columns["结果单位"];
                this.column样本号 = base.Columns["样本号"];
                this.column范围标识 = base.Columns["范围标识"];
                this.columnwj_flag = base.Columns["wj_flag"];
                this.column参考值 = base.Columns["参考值"];
                this.column检测内容 = base.Columns["检测内容"];
                this.column编号 = base.Columns["编号"];
                this.column申请医生 = base.Columns["申请医生"];
                this.column申请时间 = base.Columns["申请时间"];
                this.column条码号 = base.Columns["条码号"];
                this.column科室名称 = base.Columns["科室名称"];
                this.column标本名称 = base.Columns["标本名称"];
                this.column仪器代码 = base.Columns["仪器代码"];
                this.column备注评价 = base.Columns["备注评价"];
                this.column组合项目 = base.Columns["组合项目"];
                this.column标本采集时间 = base.Columns["标本采集时间"];
                this.column接收日期 = base.Columns["接收日期"];
                this.column报告日期 = base.Columns["报告日期"];
                this.column检验者 = base.Columns["检验者"];
                this.column报告者 = base.Columns["报告者"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column检查项目名称 = new global::System.Data.DataColumn("检查项目名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检查项目名称);
                this.column检验结果 = new global::System.Data.DataColumn("检验结果", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验结果);
                this.column结果单位 = new global::System.Data.DataColumn("结果单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column结果单位);
                this.column样本号 = new global::System.Data.DataColumn("样本号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column样本号);
                this.column范围标识 = new global::System.Data.DataColumn("范围标识", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column范围标识);
                this.columnwj_flag = new global::System.Data.DataColumn("wj_flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwj_flag);
                this.column参考值 = new global::System.Data.DataColumn("参考值", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column参考值);
                this.column检测内容 = new global::System.Data.DataColumn("检测内容", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检测内容);
                this.column编号 = new global::System.Data.DataColumn("编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column编号);
                this.column申请医生 = new global::System.Data.DataColumn("申请医生", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请医生);
                this.column申请时间 = new global::System.Data.DataColumn("申请时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column申请时间);
                this.column条码号 = new global::System.Data.DataColumn("条码号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column条码号);
                this.column科室名称 = new global::System.Data.DataColumn("科室名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column科室名称);
                this.column标本名称 = new global::System.Data.DataColumn("标本名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column标本名称);
                this.column仪器代码 = new global::System.Data.DataColumn("仪器代码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仪器代码);
                this.column备注评价 = new global::System.Data.DataColumn("备注评价", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注评价);
                this.column组合项目 = new global::System.Data.DataColumn("组合项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column组合项目);
                this.column标本采集时间 = new global::System.Data.DataColumn("标本采集时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column标本采集时间);
                this.column接收日期 = new global::System.Data.DataColumn("接收日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column接收日期);
                this.column报告日期 = new global::System.Data.DataColumn("报告日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报告日期);
                this.column检验者 = new global::System.Data.DataColumn("检验者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检验者);
                this.column报告者 = new global::System.Data.DataColumn("报告者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报告者);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段Row New可设计字段Row() {
                return ((可设计字段Row)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 可设计字段Row(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(可设计字段Row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.可设计字段RowChanged != null)) {
                    this.可设计字段RowChanged(this, new 可设计字段RowChangeEvent(((可设计字段Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.可设计字段RowChanging != null)) {
                    this.可设计字段RowChanging(this, new 可设计字段RowChangeEvent(((可设计字段Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.可设计字段RowDeleted != null)) {
                    this.可设计字段RowDeleted(this, new 可设计字段RowChangeEvent(((可设计字段Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.可设计字段RowDeleting != null)) {
                    this.可设计字段RowDeleting(this, new 可设计字段RowChangeEvent(((可设计字段Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove可设计字段Row(可设计字段Row row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "可设计字段DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 可设计字段Row : global::System.Data.DataRow {
            private 可设计字段DataTable table可设计字段;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 可设计字段Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table可设计字段 = ((可设计字段DataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检查项目名称 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.检查项目名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“检查项目名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.检查项目名称Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验结果 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.检验结果Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“检验结果”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.检验结果Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 结果单位 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.结果单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“结果单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.结果单位Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 样本号 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.样本号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“样本号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.样本号Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 范围标识 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.范围标识Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“范围标识”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.范围标识Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wj_flag {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.wj_flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“wj_flag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.wj_flagColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 参考值 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.参考值Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“参考值”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.参考值Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检测内容 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.检测内容Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“检测内容”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.检测内容Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 编号 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.编号Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 申请医生 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.申请医生Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“申请医生”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.申请医生Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 申请时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table可设计字段.申请时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“申请时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.申请时间Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 条码号 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.条码号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“条码号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.条码号Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 科室名称 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.科室名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“科室名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.科室名称Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 标本名称 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.标本名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“标本名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.标本名称Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 仪器代码 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.仪器代码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“仪器代码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.仪器代码Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注评价 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.备注评价Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“备注评价”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.备注评价Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 组合项目 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.组合项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“组合项目”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.组合项目Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 标本采集时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table可设计字段.标本采集时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“标本采集时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.标本采集时间Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 接收日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table可设计字段.接收日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“接收日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.接收日期Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 报告日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table可设计字段.报告日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“报告日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.报告日期Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检验者 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.检验者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“检验者”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.检验者Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 报告者 {
                get {
                    try {
                        return ((string)(this[this.table可设计字段.报告者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“可设计字段”中列“报告者”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table可设计字段.报告者Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检查项目名称Null() {
                return this.IsNull(this.table可设计字段.检查项目名称Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检查项目名称Null() {
                this[this.table可设计字段.检查项目名称Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验结果Null() {
                return this.IsNull(this.table可设计字段.检验结果Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验结果Null() {
                this[this.table可设计字段.检验结果Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is结果单位Null() {
                return this.IsNull(this.table可设计字段.结果单位Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set结果单位Null() {
                this[this.table可设计字段.结果单位Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is样本号Null() {
                return this.IsNull(this.table可设计字段.样本号Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set样本号Null() {
                this[this.table可设计字段.样本号Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is范围标识Null() {
                return this.IsNull(this.table可设计字段.范围标识Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set范围标识Null() {
                this[this.table可设计字段.范围标识Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswj_flagNull() {
                return this.IsNull(this.table可设计字段.wj_flagColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwj_flagNull() {
                this[this.table可设计字段.wj_flagColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is参考值Null() {
                return this.IsNull(this.table可设计字段.参考值Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set参考值Null() {
                this[this.table可设计字段.参考值Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检测内容Null() {
                return this.IsNull(this.table可设计字段.检测内容Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检测内容Null() {
                this[this.table可设计字段.检测内容Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is编号Null() {
                return this.IsNull(this.table可设计字段.编号Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set编号Null() {
                this[this.table可设计字段.编号Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请医生Null() {
                return this.IsNull(this.table可设计字段.申请医生Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请医生Null() {
                this[this.table可设计字段.申请医生Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is申请时间Null() {
                return this.IsNull(this.table可设计字段.申请时间Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set申请时间Null() {
                this[this.table可设计字段.申请时间Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is条码号Null() {
                return this.IsNull(this.table可设计字段.条码号Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set条码号Null() {
                this[this.table可设计字段.条码号Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is科室名称Null() {
                return this.IsNull(this.table可设计字段.科室名称Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set科室名称Null() {
                this[this.table可设计字段.科室名称Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is标本名称Null() {
                return this.IsNull(this.table可设计字段.标本名称Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set标本名称Null() {
                this[this.table可设计字段.标本名称Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is仪器代码Null() {
                return this.IsNull(this.table可设计字段.仪器代码Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set仪器代码Null() {
                this[this.table可设计字段.仪器代码Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注评价Null() {
                return this.IsNull(this.table可设计字段.备注评价Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注评价Null() {
                this[this.table可设计字段.备注评价Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is组合项目Null() {
                return this.IsNull(this.table可设计字段.组合项目Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set组合项目Null() {
                this[this.table可设计字段.组合项目Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is标本采集时间Null() {
                return this.IsNull(this.table可设计字段.标本采集时间Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set标本采集时间Null() {
                this[this.table可设计字段.标本采集时间Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is接收日期Null() {
                return this.IsNull(this.table可设计字段.接收日期Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set接收日期Null() {
                this[this.table可设计字段.接收日期Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报告日期Null() {
                return this.IsNull(this.table可设计字段.报告日期Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报告日期Null() {
                this[this.table可设计字段.报告日期Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检验者Null() {
                return this.IsNull(this.table可设计字段.检验者Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检验者Null() {
                this[this.table可设计字段.检验者Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is报告者Null() {
                return this.IsNull(this.table可设计字段.报告者Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set报告者Null() {
                this[this.table可设计字段.报告者Column] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 可设计字段RowChangeEvent : global::System.EventArgs {
            private 可设计字段Row eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段RowChangeEvent(可设计字段Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 可设计字段Row Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
